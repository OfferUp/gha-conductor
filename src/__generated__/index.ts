/**
 * !!! This file is autogenerated do not edit by hand !!!
 *
 * Generated by: @databases/pg-schema-print-types
 * Checksum: 83F5McXYYM6cIxV5tfD0kT9V1Ga3LBkZBtNqYKbJ4Kh5KNhvBD8+Xhyl6O2HYBFRL57iA898ZckZmMJ+afIESQ==
 */

/* eslint-disable */
// tslint:disable

import AtdatabasesMigrationsApplied, {AtdatabasesMigrationsApplied_InsertParameters} from './atdatabases_migrations_applied'
import AtdatabasesMigrationsVersion, {AtdatabasesMigrationsVersion_InsertParameters} from './atdatabases_migrations_version'
import GhaHooks, {GhaHooks_InsertParameters} from './gha_hooks'

interface DatabaseSchema {
  atdatabases_migrations_applied: {record: AtdatabasesMigrationsApplied, insert: AtdatabasesMigrationsApplied_InsertParameters};
  atdatabases_migrations_version: {record: AtdatabasesMigrationsVersion, insert: AtdatabasesMigrationsVersion_InsertParameters};
  gha_hooks: {record: GhaHooks, insert: GhaHooks_InsertParameters};
}
export default DatabaseSchema;

/**
 * JSON serialize values (v) if the table name (t) and column name (c)
 * is a JSON or JSONB column.
 * This is necessary if you want to store values that are not plain objects
 * in a JSON or JSONB column.
 */
function serializeValue(t: string, c: string, v: unknown): unknown {
  if (t === "gha_hooks" && (c === "pipeline_params" || c === "shared_params")) {
    return JSON.stringify(v);
  }
  return v;
}
export {serializeValue}

export type {
  AtdatabasesMigrationsApplied,
  AtdatabasesMigrationsApplied_InsertParameters,
  AtdatabasesMigrationsVersion,
  AtdatabasesMigrationsVersion_InsertParameters,
  GhaHooks,
  GhaHooks_InsertParameters,
}
